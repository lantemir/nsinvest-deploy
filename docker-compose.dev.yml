version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env.dev
    environment:
      POSTGRES_DB: investdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin

      # POSTGRES_DB: ${POSTGRES_DB}
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:7
    container_name: redis
    restart: always

  backend:
    build: ../django/nsinvest_backend
    container_name: backend
    volumes:
      - ../django/nsinvest_backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    env_file: .env.dev
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python create_superuser.py &&
             daphne -b 0.0.0.0 -p 8000 backend.asgi:application"

  celery:
    build: ../django/nsinvest_backend
    container_name: celery
    volumes:
      - ../django/nsinvest_backend:/app
    depends_on:
      - backend
      - redis
    env_file: .env.dev
    command: celery -A backend worker --loglevel=info

  celery-beat:
    build: ../django/nsinvest_backend
    container_name: celery_beat
    volumes:
      - ../django/nsinvest_backend:/app
    depends_on:
      - backend
      - redis
    env_file: .env.dev
    command: celery -A backend beat --loglevel=info

  frontend:
    build: ../next/nsinvest_front
    container_name: frontend
    volumes:
      - ../next/nsinvest_front:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file: .env.dev
    command: sh -c "npm install && npm run dev"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ../django/nsinvest_backend/staticfiles:/app/staticfiles
      - ../django/nsinvest_backend/media:/app/media
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
